// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

#include "numthread.cginc"

Texture3D<float4> _Velocity;
SamplerState vel_linear_clamp_sampler;

RWTexture3D<float> _WRITE;

[numthreads(NUMTHREADS, NUMTHREADS, NUMTHREADS)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    float3 L = _Velocity[uint3(id.x-1, id.y, id.z)].xyz;
    float3 R = _Velocity[uint3(id.x+1, id.y, id.z)].xyz;
    
    float3 B = _Velocity[uint3(id.x, id.y-1, id.z)].xyz;
    float3 T = _Velocity[uint3(id.x, id.y+1, id.z)].xyz;
    
    float3 D = _Velocity[uint3(id.x, id.y, id.z -1)].xyz;
    float3 U = _Velocity[uint3(id.x, id.y, id.z +1)].xyz;

    float divergence = 0.5 * ((R.x - L.x) + (T.y - B.y) + (U.z - D.z));
	_WRITE[id.xyz] = divergence;
}
