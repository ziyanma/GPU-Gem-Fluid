// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain
#include "numthread.cginc"

Texture3D<float> _Pressure;
Texture3D<float> _Divergence;
RWTexture3D<float> _WRITE;

[numthreads(NUMTHREADS, NUMTHREADS, NUMTHREADS)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	// divergence at center cell.
	float selfDivergence = _Divergence[id];

	// Get pressure values from neighboring cells.
	float pL = _Pressure[uint3(id.x-1, id.y, id.z)];
    float pR = _Pressure[uint3(id.x+1, id.y, id.z)];
    
    float pB = _Pressure[uint3(id.x, id.y-1, id.z)];
    float pT = _Pressure[uint3(id.x, id.y+1, id.z)];
    
    float pD = _Pressure[uint3(id.x, id.y, id.z -1)];
    float pU = _Pressure[uint3(id.x, id.y, id.z +1)];

	_WRITE[id] = (pL + pR + pB + pT + pU + pD - selfDivergence) / 6.0; 
}
